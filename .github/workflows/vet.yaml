name: Vet

on:
  pull_request:
  workflow_dispatch:
    branches: [ '**' ]
permissions:
  contents: read
  checks: write

jobs:
  golang-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_version: [ 1.23.x ]
    steps:
      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version: ${{ matrix.go_version }}
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - name: golangci-lint
        uses: golangci/golangci-lint-action@3a919529898de77ec3da873e3063ca4b10e7f5cc # v3.7.0
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.64

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          args: --timeout=5m

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: true

          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
  golang-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_version: [ 1.23.x ]
    steps:
      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version: ${{ matrix.go_version }}
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - name: run tests
        run: go test -json ./... > test.json
      - name: Annotate tests
        if: always()
        uses: guyarb/golang-test-annotations@9ab2ea84a399d03ffd114bf49dd23ffadc794541 # v0.6.0
        with:
          test-results: test.json
  web-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - name: Set up NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3.8.2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: web/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm test
  web-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - name: Set up NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3.8.2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: web/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Save Report
        run: npm run lint:report
        continue-on-error: true
      - name: Annotate Results
        uses: ataylorme/eslint-annotate-action@5f4dc2e3af8d3c21b727edb597e5503510b1dc9c # 2.2.0
        if: "!github.event.pull_request.head.repo.fork" 
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          report-json: "web/eslint_report.json"
